name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches:
      - 'dev'

jobs:

  deployment:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: use node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: cache all node_modules
      id: cache-modules
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
    - name: find location of global yarn cache
      id: yarn-cache
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: cache global yarn cache
      uses: actions/cache@v4
      if: steps.cache-modules.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: yarn install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: yarn install --immutable
    - name: build packages
      run: |
        yarn lerna run build
        cd packages/client
        ./create_client_env_file.sh
        yarn build:app
        cd ../.. 
    - name: Build and push client to Docker Hub
      uses: docker/build-push-action@v3
      with:
        context: packages/client
        push: true
        tags: |
          cloudcarbonfootprint/client:latest
    - name: Build and push api to Docker Hub
      uses: docker/build-push-action@v3
      with:
        context: packages/api
        push: true
        tags: |
          cloudcarbonfootprint/api:latest
