name: publish
on:
  workflow_dispatch:
  push:
    branches: ['dev']
    paths:
      - 'packages/ali'
      - 'packages/aws'
      - 'packages/azure'
      - 'packages/cli'
      - 'packages/common'
      - 'packages/gcp'
      - 'packages/on-premise'
      - 'packages/app'
      - 'packages/core'
      - 'packages/api'
      - 'packages/client'

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-packages:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: use node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: cache all node_modules
      id: cache-modules
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock', '**/package.json') }}
    - name: find location of global yarn cache
      id: yarn-cache
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: cache global yarn cache
      uses: actions/cache@v4
      if: steps.cache-modules.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: yarn install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: yarn install --immutable
    - name: build packages
      run: |
        yarn lerna run build
        cd packages/client
        ./create_client_env_file.sh
        yarn build:app
        cd ../..
    - name: publish
      run: yarn lerna publish from-package --yes
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    