apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloud-carbon-footprint.fullname" . }}-client
  labels:
    app.kubernetes.io/name: {{ include "app.name" . }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: {{ include "app.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    {{- include "cloud-carbon-footprint.labels" . | nindent 4 }}
    app.kubernetes.io/component: client
  {{- with .Values.client.deployment.annotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.client.deployment.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloud-carbon-footprint.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: client
  template:
    metadata:
      {{- with .Values.client.pods.podAnnotations }}
      annotations:  {{ toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloud-carbon-footprint.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: client
    spec:
      {{- with .Values.client.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloud-carbon-footprint.fullname" . }}-api
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.client.deployment.image.repository }}:{{ .Values.client.deployment.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.client.deployment.image.pullPolicy }}
          ports:
            - name: {{ .Values.client.service.port.name  }}
              containerPort: {{ .Values.client.service.port.containerPort }}
              protocol: {{ .Values.client.service.port.protocol  }}

          envFrom:
            {{- if .Values.client.configmap.name }}
            - configMapRef:
                name: {{ .Values.client.configmap.name }}
            {{- end }}

            {{- if and .Values.client.secrets (not (empty .Values.client.secrets.name)) }}
            - secretRef:
                name: {{ .Values.client.secrets.name }}
            {{- end }}
            

          resources:
            {{- toYaml .Values.client.deployment.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.client.deployment.securityContext | nindent 12 }}
          
      {{- if .Values.client.configmap.nginxconfname }}
          volumeMounts:
            - name: config-volume
              mountPath:  /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.client.configmap.nginxconfname }}
            defaultMode: 0755
      {{- end }}

      {{- with .Values.api.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.deployment.toleration }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- tpl (toYaml .) $ | nindent 8 }}
      {{- end }}